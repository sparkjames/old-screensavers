{"mappings":"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","sources":["<anon>","htdocs/testing/starfield/src/js/index.js"],"sourcesContent":["var $492c20f3a47ba561$exports = {};\nconst $492c20f3a47ba561$var$theVoid = document.querySelector(\".the-void\");\n/**\n\t * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\t */ function $492c20f3a47ba561$var$getRandomIntInclusive(min, max) {\n    const minCeiled = Math.ceil(min);\n    const maxFloored = Math.floor(max);\n    return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled); // The maximum is inclusive and the minimum is inclusive\n}\n/**\n * Get a random one of the 16 color pallette.\n * @return string A hex code for a color.\n */ function $492c20f3a47ba561$var$getRandom16Color() {\n    const colorPallette = [];\n    // colorPallette.push(\"#000000\");\n    colorPallette.push(\"#FFFFFF\");\n    colorPallette.push(\"#C0C0C0\");\n    colorPallette.push(\"#808080\");\n    colorPallette.push(\"#FF0000\");\n    colorPallette.push(\"#00FF00\");\n    colorPallette.push(\"#0000FF\");\n    colorPallette.push(\"#00FFFF\");\n    colorPallette.push(\"#FF00FF\");\n    colorPallette.push(\"#FFFF00\");\n    colorPallette.push(\"#008080\");\n    colorPallette.push(\"#800080\");\n    colorPallette.push(\"#808000\");\n    colorPallette.push(\"#800000\");\n    colorPallette.push(\"#008000\");\n    colorPallette.push(\"#000080\");\n    const randomIndex = $492c20f3a47ba561$var$getRandomIntInclusive(0, 14);\n    return colorPallette[randomIndex];\n}\n/**\n * Get a random integer that is at most 75% of the screen width.\n * \n * @return int Random integer used for X or left position.\n */ function $492c20f3a47ba561$var$initX() {\n    const x_max = .75 * window.innerWidth / 2; // The max distance from the starting point where the star will appear.\n    const x_min = 0 - x_max;\n    const x = $492c20f3a47ba561$var$getRandomIntInclusive(x_min, x_max);\n    return x;\n}\n/**\n * Get a random integer that is at most 75% of the screen height.\n * \n * @return int Random integer used for Y or top position.\n */ function $492c20f3a47ba561$var$initY() {\n    const y_max = .75 * window.innerHeight / 2;\n    const y_min = 0 - y_max;\n    const y = $492c20f3a47ba561$var$getRandomIntInclusive(y_min, y_max);\n    return y;\n}\n/**\n * Create the <div>s to represent stars and populate the stars array.\n * \n * @return [] Array of new star <div>s.\n */ function $492c20f3a47ba561$var$initStars() {\n    let new_stars = [];\n    const starpoint = document.querySelector(\".starpoint\");\n    starpoint.style.perspective = $492c20f3a47ba561$var$perspective;\n    for(let i = 0; i < $492c20f3a47ba561$var$star_count; i++){\n        let new_star = document.createElement(\"div\");\n        new_star.classList.add(\"star\");\n        new_star.innerHTML = `<svg viewBox=\"0 0 173 142\" xmlns=\"http://www.w3.org/2000/svg\"><path style=\"display:inline;fill:${$492c20f3a47ba561$var$getRandom16Color()};stroke-width:0\" d=\"M194-32.5c-14 .1-28 3.5-39 9v16.9c9-4.5 16-7.9 28-8.9v40.2c-11 0-20 3-28 7v68c22-13 48-17 83 0V-22.2c-15-7.2-29-10.3-43-10.3zm5 16.1c8 0 14 .8 21 4.5v39.6c-10-4-18-5-27-4v-40c2-.1 4-.1 6-.1zm-16 51.1v39c-10 1-21 4-28 9v-40c9-5 16-7 28-8zm10 0c10 0 18 0 28 4v39c-9-4-18-5-28-4zM152-22.2v14.3L138 .6V-15ZM152-4.7V9.6l-14 8.9v-16zM152 13.5v14l-15 9 1-16zM152 30.5v15l-14 8v-15zM152 48.5v14l-15 8 1-15zM152 66.5v14l-14 8v-15zM152 84.5v14l-14 8.5V91.5ZM134-16.9v13.8l-14 7.4v-14zM134 1.1v13.4l-14 8V8.4ZM134 18.5v13l-14 8v-14zM134 36.5v14l-14 7v-14zM134 53.5v14l-14 8v-14zM134 70.5v14l-14 7v-14zM134 87.5V102l-14 8V95.5ZM117-16.1v12.5l-12 5.8v-12.5ZM117 2v12.5l-12 6V7.8ZM117 18.5v13l-12 6v-13zM117 36.5v12l-12 6v-12zM117 54.5v13l-12 5v-12zM117 71.5v12l-12 6v-12zM117 88.5V102l-12 6V94.5ZM100-14.2V-5l-9.4 4v-8.5zM100 3.6v8.9l-9.5 4V8.3ZM100 20.5v9l-9.4 4v-8zM100 38.5v9l-9.5 4v-9zM100 56.5v9l-9.5 4v-8zM100 73.5v9l-9.4 4v-8zM101 91.5v9.5l-10.3 4v-8.5zM84.2-19.5v7.1l-7.1 4.3v-7.5zM84.3-1.7v7.1l-7.1 4.3V2.2ZM84.3 15.5v7l-7.1 4v-7zM84.3 33.5v7l-7.1 4v-7zM84.3 51.5v7l-7.1 4v-8zM84.5 67.5v8l-7.1 4v-8zM84.4 85.5v7l-7.1 4v-7zM64.9 91.5l-.1-5 5.5-3 .1 5zM65.2 73.5l-.1-5 5.5-3 .1 5zM65 56.5l-.1-5 5.5-3 .1 5zM64.9 38.5l-.1-5 5.5-3 .1 5zM65.1 20.5l-.2-5 5.5-3 .2 5zM65.1 3.4l-.1-5 5.5-3 .1 5zM65-14.7l-.1-5 5.5-3 .1 5z\" transform=\"translate(-64.8 32.5)\"/></svg>`;\n        document.querySelector(\".starpoint\").appendChild(new_star);\n        new_stars.push(new_star);\n    }\n    return new_stars;\n}\n/**\n * Trigger movement on a star by setting CSS values. Will start an infinite setTimeout loop with resetStarPosition().\n * \n * @param object HTML div element for one of the stars.\n * \n * @return object Star HTML element with updated CSS properties.\n */ function $492c20f3a47ba561$var$moveStar(star) {\n    // Set a random time (in seconds) for the transition, so some stars will be fast and others slow.\n    transition_seconds = $492c20f3a47ba561$var$getRandomIntInclusive(7, 30);\n    star.style.transition = `transform ${transition_seconds}s linear, opacity ${transition_seconds / 2}s linear`;\n    // Replace the Z transform value and set the opacity to triger the transition animation.\n    star.style.transform = star.style.transform.replace(\", 0px)\", `, ${$492c20f3a47ba561$var$star_z_distance})`);\n    star.style.opacity = \"1\";\n    // Reset the star position after a timeout that is delayed for the same time as the above transition.\n    setTimeout(()=>{\n        star = $492c20f3a47ba561$var$resetStarPosition(star);\n    }, transition_seconds * 1000);\n    return star;\n}\n/**\n * Reset a star to the starting CSS values. Will start an infinite setTimeout loop with moveStar().\n * \n * @param object HTML div element for one of the stars.\n * \n * @return object Star HTML element with updated CSS properties.\n */ function $492c20f3a47ba561$var$resetStarPosition(star) {\n    // Get randomized X and Y position values.\n    let x = $492c20f3a47ba561$var$initX();\n    let y = $492c20f3a47ba561$var$initY();\n    // Set the styles to reset this star's position, opacity, and transition state.\n    star.style.left = `${x}px`;\n    star.style.top = `${y}px`;\n    star.style.transform = \"translate3d(0px, 0px, 0px)\";\n    star.style.opacity = \"0\"; // '0.5'\n    star.style.transition = \"none\";\n    // Get a random number of miliseconds to delay triggering the movement on this star.\n    star_appear_timeout = $492c20f3a47ba561$var$getRandomIntInclusive(10, 4000);\n    // Move the star after the random delay.\n    setTimeout(()=>{\n        $492c20f3a47ba561$var$moveStar(star);\n    }, star_appear_timeout);\n    return star;\n}\n// Set some starting values.\nconst $492c20f3a47ba561$var$star_count = 100; // The number of stars.\nconst $492c20f3a47ba561$var$perspective = \"15in\"; // The perspective distance (for CSS).\nconst $492c20f3a47ba561$var$star_z_distance = \"16in\"; // The distance for the stars to move (for CSS).\n// Create the star <div>s.\nlet $492c20f3a47ba561$var$stars = $492c20f3a47ba561$var$initStars();\n// console.log('stars = ', stars);\n// For each star, set its initial position with resetStarPosition(), which will trigger the inifinite loop with moveStar().\n$492c20f3a47ba561$var$stars.map((star)=>{\n    star = $492c20f3a47ba561$var$resetStarPosition(star);\n    return star;\n});\n/**\n * Controls\n */ const $492c20f3a47ba561$var$graphicTogglesOnChange = (e)=>{\n    const radioEl = e.target;\n    console.log(\"radioEl = \", radioEl);\n    const acceptableValues = [\n        \"windows\",\n        \"stars\"\n    ];\n    if (acceptableValues.indexOf(radioEl.value) > -1) {\n        $492c20f3a47ba561$var$theVoid.classList.remove(\"graphic--windows\", \"graphic--stars\");\n        $492c20f3a47ba561$var$theVoid.classList.add(`graphic--${radioEl.value}`);\n    }\n};\nconst $492c20f3a47ba561$var$graphicToggles = document.querySelectorAll(\".controls-radio--graphic\");\n$492c20f3a47ba561$var$graphicToggles.forEach((el)=>{\n    el.addEventListener(\"change\", $492c20f3a47ba561$var$graphicTogglesOnChange);\n});\n\n\n//# sourceMappingURL=starfield.054ac985.js.map\n","const theVoid = document.querySelector('.the-void');\n\n\n\n/**\n\t * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\t */\nfunction getRandomIntInclusive(min, max) {\n\tconst minCeiled = Math.ceil(min);\n\tconst maxFloored = Math.floor(max);\n\treturn Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled); // The maximum is inclusive and the minimum is inclusive\n}\n\n/**\n * Get a random one of the 16 color pallette.\n * @return string A hex code for a color.\n */\nfunction getRandom16Color(){\n\tconst colorPallette = [];\n\t// colorPallette.push(\"#000000\");\n\tcolorPallette.push(\"#FFFFFF\");\n\tcolorPallette.push(\"#C0C0C0\");\n\tcolorPallette.push(\"#808080\");\n\tcolorPallette.push(\"#FF0000\");\n\tcolorPallette.push(\"#00FF00\");\n\tcolorPallette.push(\"#0000FF\");\n\tcolorPallette.push(\"#00FFFF\");\n\tcolorPallette.push(\"#FF00FF\");\n\tcolorPallette.push(\"#FFFF00\");\n\tcolorPallette.push(\"#008080\");\n\tcolorPallette.push(\"#800080\");\n\tcolorPallette.push(\"#808000\");\n\tcolorPallette.push(\"#800000\");\n\tcolorPallette.push(\"#008000\");\n\tcolorPallette.push(\"#000080\");\n\n\tconst randomIndex = getRandomIntInclusive(0,14);\n\n\treturn colorPallette[randomIndex];\n}\n\n/**\n * Get a random integer that is at most 75% of the screen width.\n * \n * @return int Random integer used for X or left position.\n */\nfunction initX(){\n\tconst x_max = (.75 * window.innerWidth) / 2; // The max distance from the starting point where the star will appear.\n\tconst x_min = 0 - x_max;\n\tconst x = getRandomIntInclusive(x_min , x_max);\n\treturn x;\n}\n\n/**\n * Get a random integer that is at most 75% of the screen height.\n * \n * @return int Random integer used for Y or top position.\n */\nfunction initY(){\n\tconst y_max = (.75 * window.innerHeight) / 2;\n\tconst y_min = 0 - y_max;\n\tconst y = getRandomIntInclusive(y_min, y_max);\n\treturn y;\n}\n\n/**\n * Create the <div>s to represent stars and populate the stars array.\n * \n * @return [] Array of new star <div>s.\n */\nfunction initStars(){\n\tlet new_stars = [];\n\tconst starpoint = document.querySelector('.starpoint');\n\n\tstarpoint.style.perspective = perspective;\n\n\tfor( let i=0; i<star_count; i++ ){\n\t\tlet new_star = document.createElement('div');\n\n\t\tnew_star.classList.add('star');\n\t\tnew_star.innerHTML = `<svg viewBox=\"0 0 173 142\" xmlns=\"http://www.w3.org/2000/svg\"><path style=\"display:inline;fill:${getRandom16Color()};stroke-width:0\" d=\"M194-32.5c-14 .1-28 3.5-39 9v16.9c9-4.5 16-7.9 28-8.9v40.2c-11 0-20 3-28 7v68c22-13 48-17 83 0V-22.2c-15-7.2-29-10.3-43-10.3zm5 16.1c8 0 14 .8 21 4.5v39.6c-10-4-18-5-27-4v-40c2-.1 4-.1 6-.1zm-16 51.1v39c-10 1-21 4-28 9v-40c9-5 16-7 28-8zm10 0c10 0 18 0 28 4v39c-9-4-18-5-28-4zM152-22.2v14.3L138 .6V-15ZM152-4.7V9.6l-14 8.9v-16zM152 13.5v14l-15 9 1-16zM152 30.5v15l-14 8v-15zM152 48.5v14l-15 8 1-15zM152 66.5v14l-14 8v-15zM152 84.5v14l-14 8.5V91.5ZM134-16.9v13.8l-14 7.4v-14zM134 1.1v13.4l-14 8V8.4ZM134 18.5v13l-14 8v-14zM134 36.5v14l-14 7v-14zM134 53.5v14l-14 8v-14zM134 70.5v14l-14 7v-14zM134 87.5V102l-14 8V95.5ZM117-16.1v12.5l-12 5.8v-12.5ZM117 2v12.5l-12 6V7.8ZM117 18.5v13l-12 6v-13zM117 36.5v12l-12 6v-12zM117 54.5v13l-12 5v-12zM117 71.5v12l-12 6v-12zM117 88.5V102l-12 6V94.5ZM100-14.2V-5l-9.4 4v-8.5zM100 3.6v8.9l-9.5 4V8.3ZM100 20.5v9l-9.4 4v-8zM100 38.5v9l-9.5 4v-9zM100 56.5v9l-9.5 4v-8zM100 73.5v9l-9.4 4v-8zM101 91.5v9.5l-10.3 4v-8.5zM84.2-19.5v7.1l-7.1 4.3v-7.5zM84.3-1.7v7.1l-7.1 4.3V2.2ZM84.3 15.5v7l-7.1 4v-7zM84.3 33.5v7l-7.1 4v-7zM84.3 51.5v7l-7.1 4v-8zM84.5 67.5v8l-7.1 4v-8zM84.4 85.5v7l-7.1 4v-7zM64.9 91.5l-.1-5 5.5-3 .1 5zM65.2 73.5l-.1-5 5.5-3 .1 5zM65 56.5l-.1-5 5.5-3 .1 5zM64.9 38.5l-.1-5 5.5-3 .1 5zM65.1 20.5l-.2-5 5.5-3 .2 5zM65.1 3.4l-.1-5 5.5-3 .1 5zM65-14.7l-.1-5 5.5-3 .1 5z\" transform=\"translate(-64.8 32.5)\"/></svg>`;\n\n\t\tdocument.querySelector('.starpoint').appendChild(new_star);\n\n\t\tnew_stars.push(new_star);\n\t}\n\n\treturn new_stars;\n}\n\n/**\n * Trigger movement on a star by setting CSS values. Will start an infinite setTimeout loop with resetStarPosition().\n * \n * @param object HTML div element for one of the stars.\n * \n * @return object Star HTML element with updated CSS properties.\n */\nfunction moveStar(star){\n\t// Set a random time (in seconds) for the transition, so some stars will be fast and others slow.\n\ttransition_seconds = getRandomIntInclusive(7, 30);\n\tstar.style.transition = `transform ${transition_seconds}s linear, opacity ${transition_seconds / 2}s linear`;\n\n\t// Replace the Z transform value and set the opacity to triger the transition animation.\n\tstar.style.transform = star.style.transform.replace(', 0px)', `, ${star_z_distance})`);\n\tstar.style.opacity = '1';\n\n\t// Reset the star position after a timeout that is delayed for the same time as the above transition.\n\tsetTimeout( () => {\n\t\tstar = resetStarPosition(star);\n\t}, transition_seconds*1000 );\n\n\treturn star;\n}\n\n/**\n * Reset a star to the starting CSS values. Will start an infinite setTimeout loop with moveStar().\n * \n * @param object HTML div element for one of the stars.\n * \n * @return object Star HTML element with updated CSS properties.\n */\nfunction resetStarPosition(star){\n\t// Get randomized X and Y position values.\n\tlet x = initX();\n\tlet y = initY();\n\n\t// Set the styles to reset this star's position, opacity, and transition state.\n\tstar.style.left = `${x}px`;\n\tstar.style.top = `${y}px`;\n\tstar.style.transform = 'translate3d(0px, 0px, 0px)';\n\tstar.style.opacity = '0'; // '0.5'\n\tstar.style.transition = 'none';\n\n\t// Get a random number of miliseconds to delay triggering the movement on this star.\n\tstar_appear_timeout = getRandomIntInclusive(10, 4000);\n\n\t// Move the star after the random delay.\n\tsetTimeout( () => {\n\t\tmoveStar(star);\n\t}, star_appear_timeout);\n\n\treturn star;\n}\n\n\n\n// Set some starting values.\nconst star_count = 100; // The number of stars.\nconst perspective = '15in'; // The perspective distance (for CSS).\nconst star_z_distance = '16in'; // The distance for the stars to move (for CSS).\n\n// Create the star <div>s.\nlet stars = initStars();\n// console.log('stars = ', stars);\n\n// For each star, set its initial position with resetStarPosition(), which will trigger the inifinite loop with moveStar().\nstars.map( (star) => {\n\tstar = resetStarPosition(star);\n\treturn star;\n});\n\n\n\n\n\n/**\n * Controls\n */\n\nconst graphicTogglesOnChange = (e) => {\n\tconst radioEl = e.target;\n\tconsole.log('radioEl = ', radioEl);\n\tconst acceptableValues = [\n\t\t'windows',\n\t\t'stars',\n\t];\n\t\n\tif ( acceptableValues.indexOf( radioEl.value ) > -1 ) {\n\t\ttheVoid.classList.remove( 'graphic--windows', 'graphic--stars' );\n\t\ttheVoid.classList.add( `graphic--${radioEl.value}` );\n\t}\n};\n\nconst graphicToggles = document.querySelectorAll('.controls-radio--graphic');\n\ngraphicToggles.forEach( (el) => {\n\tel.addEventListener('change', graphicTogglesOnChange );\n} );\n"],"names":["$492c20f3a47ba561$var$theVoid","document","querySelector","$492c20f3a47ba561$var$getRandomIntInclusive","min","max","minCeiled","Math","ceil","floor","random","maxFloored","$492c20f3a47ba561$var$stars","$492c20f3a47ba561$var$initStars","new_stars","starpoint","style","perspective","i","new_star","createElement","classList","add","innerHTML","$492c20f3a47ba561$var$getRandom16Color","colorPallette","push","appendChild","map","star","$492c20f3a47ba561$var$resetStarPosition","x","$492c20f3a47ba561$var$initX","x_max","window","innerWidth","y","$492c20f3a47ba561$var$initY","y_max","innerHeight","left","top","transform","opacity","transition","setTimeout","transition_seconds","replace","star_appear_timeout","$492c20f3a47ba561$var$graphicTogglesOnChange","e","radioEl","target","console","log","acceptableValues","indexOf","value","remove","$492c20f3a47ba561$var$graphicToggles","querySelectorAll","forEach","el","addEventListener"],"version":3,"file":"starfield.054ac985.js.map"}